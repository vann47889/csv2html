#include <iostream>
#include <fstream>
#include <string>
#include<vector>
#include<sstream>
#include <algorithm>
using namespace std;
int hCheck = 0;
int rCheck = 0;
int nCheck = 0;
int qCheck = 0;
int bgCheck = 0;
int fgCheck = 0;
int lineCount = 0;
int border = 1;
string bg = "";
string fg = "";



void interface()
{
	cout << "--help: display the help text for the program" << endl;
	cout << "-h: first line is the table header" << endl;
	cout << "-r: report conversion metrics" << endl;
	cout << "-n: no border" << endl;
	cout << "-q: strip quotes, commas inside quotes are not delimiters" << endl;
	cout << "--bg: background-colors for rows (first is header, then cycle)" << endl;
	cout << "--background: where the colors are HTML/CSS compatible encoding" << endl;
	cout << "--fg: foreground-colors for row (first is header, then cycle)" << endl;
	cout << "--foreground: where the colors are HTML/CSS compatible encoding" << endl;
}

void switchChecknPrint(int*hrnq, char *input, string fileName)                                                               
{
	int sum = 0;
	int length = sizeof(input);
	for (int i = 0; i <= 3; i++)
	{
		sum += hrnq[i];
	}
    
	switch (sum) {
	case 0:
		break;
	case 1:
		hCheck = 1;
		break;
		
	case 4:
		rCheck = 1;
		break;
	case 6:
		nCheck = 1;
		break;
	case 8:
		qCheck = 1;
		break;
	case 5:
		
		hCheck = 1;
		rCheck = 1;
		break;
	case 7:
		
		hCheck = 1;
		nCheck = 1;
		break;
	case 9:
		
		hCheck = 1;
		qCheck = 1;
		break;
	case 10:
		
		rCheck = 1;
		nCheck = 1;
		break;
	case 12:
		
		rCheck = 1;
		qCheck = 1;
		break;
	case 14:
		
		nCheck = 1;
		qCheck = 1;
		break;
	case 11:
		
		hCheck = 1;
		rCheck = 1;
		nCheck = 1;
		break;
	case 13:
		
		hCheck = 1;
		rCheck = 1;
		qCheck = 1;
		break;
	case 15:
		
		hCheck = 1;
		nCheck = 1;
		qCheck = 1;
		break;
	case 18:
		
		rCheck = 1;
		nCheck = 1;
		qCheck = 1;
		break;
	case 19:
		
		hCheck = 1;
		rCheck = 1;
		nCheck = 1;
		qCheck = 1;
		break;
	default:
		cout << "Unknown switch" << endl;
	}
	
	ifstream inputFile(fileName + ".csv");
	ofstream outputFile(fileName + ".html");
	if (inputFile.is_open())
	{
		
		
		
		outputFile << "<!DOCTYPE html>" << endl;
		
		outputFile << "<html>"<<endl;
		if (hCheck == 1)
		{
			outputFile << "<head><title>" << fileName << "</title></head>" << endl;
		}
		if (bgCheck == 1)
		{
			outputFile << "<style>\n th {background-color:" << bg << "; color:" << fg << "; }\n</style>";
		}
		outputFile << "<body>" << endl;
		if (nCheck == 1)
		{
			border = 0;
			outputFile << "<table border='" << border << "'>"<<endl;
		}
		if (nCheck == 0)
		{
			border = 1;
			outputFile << "<table border='" << border << "'>"<<endl;
		}
		

		

		string line;

		
		if (getline(inputFile, line)) {
			stringstream ss(line);
			string cell;
			outputFile << "<tr>"<<endl;
			while (getline(ss, cell, ',')) {
				outputFile << "  <th>" << cell << "</th>"<<endl;
			}
			outputFile << "</tr>"<<endl;
			lineCount++;
		}

		
		
        if (qCheck == 0)
		{
			while (getline(inputFile, line)) {
				stringstream ss(line);
				string cell;
				outputFile << "<tr>"<<endl;
				while (getline(ss, cell, ',')) {
					outputFile << "  <td>" << cell << "</td>"<<endl;
				}
				outputFile << "</tr>"<<endl;
				lineCount++;
			}
		}

		if (qCheck == 1)
		{
			while (getline(inputFile, line)) {
				stringstream ss(line);
				string cell;
				outputFile << "<tr>"<<endl;
				while (std::getline(ss, cell)) {
					outputFile << "  <td>" << cell << "</td>"<<endl;
				}
				outputFile << "</tr>"<<endl;
				lineCount++;
			}
		}

		if (rCheck == 1)
		{
            cout << "Number of line(s) input: " << lineCount << endl;
		}

		
		outputFile << "</table>"<<endl;
		outputFile << "</body></html>"<<endl;

		cout << "HTML table generated successfully." <<endl;


	}
	else {
		cout << "Error opening file";
	}

}
int inputCheck(char *input, int*hrnq, int check)
{

	int length = sizeof(input);
	for (int i = 0; input[i] != ' '; i++) {
		if (input[i] == 'h' && input[i + 1] == 'e' && input[i + 2] == 'l' && input[i + 3] == 'p')
		{
			interface();
			break;
		}

		else if (input[i] == 'h') {
			hrnq[0] = 1;
			
			
		}
		else if (input[i] == 'r') {
			hrnq[1] = 4;
			
			
		}

		else if (input[i] == 'n') {
			hrnq[2] = 6;
			

		}

		else if (input[i] == 'q') {
			hrnq[3] = 8;
			

		}
		else {
			hrnq[1] = 1000;
		}
		
	}
	return check;
	
}

string fName(char *input,string fileName)
{
	
	int z = 0;
	for (int i = 0; i < 100; i++)
	{
		if (input[i] == '.' && input[i + 1] == 'c' && input[i + 2] == 's' && input[i + 3] == 'v')
		{
			int y = i-1;
			for (y; input[y] != ' '; y--)
			{
				fileName = fileName + input[y];
			}
			
			
			z = i+5;
			int u = 0;
			for (z; z < 100; z++)
			{
				
				if (input[z] == 'b' && input[z + 1] == 'g')
				{
					
					int t = z + 3;
					
					for (t; input[t]!=0&&input[t]!=' '; t++)
					{
						bg = bg + input[t];
						u = t+1;
					}
					z = 100;
					bgCheck = 1;

					
					
				}

			}

			for (u; u < 40; u++)
			{
				
				if (input[u] == 'f' && input[u + 1] == 'g')
				{

					int t = u + 3;
					int u = 0;
					for (t; input[t] != 0 && input[t] != ' '; t++)
					{
						fg = fg + input[t];
						u = t + 1;
					}
					u = 100;
					fgCheck = 1;



				}

			}
			


		}

		

		
		
		
	}
	
	reverse(fileName.begin(), fileName.end());
	
	return fileName;
}


int main(int argc, char* argv[]) 
{
	//int hCheck = 0;
	string fileName = "";
	int check = 0;
	int hrnq[4] = {0,0,0,0};
	
	
	string input="";
	char inputArr[100];
	

	cout << "csv2html ";
	getline(cin, input);
	strcpy_s(inputArr, input.c_str());

	

	
    inputCheck(inputArr, hrnq, check);
	fileName = fName(inputArr, fileName);
	
	
	if (check = 1)
	{
		switchChecknPrint(hrnq,inputArr, fileName);
		//cout << fileName << endl;
		//printFile(fileName);
	}
		
	else
	{
		cout << "Bye" << endl;
	}
	
	
	
